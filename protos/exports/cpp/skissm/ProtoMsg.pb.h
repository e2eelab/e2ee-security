// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skissm/ProtoMsg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_skissm_2fProtoMsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_skissm_2fProtoMsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "skissm/E2eeAddress.pb.h"
#include "skissm/AcceptMsg.pb.h"
#include "skissm/AddGroupMembersMsg.pb.h"
#include "skissm/CreateGroupMsg.pb.h"
#include "skissm/E2eeMsg.pb.h"
#include "skissm/HeartbeatMsg.pb.h"
#include "skissm/InviteMsg.pb.h"
#include "skissm/RemoveGroupMembersMsg.pb.h"
#include "skissm/SupplyOpksMsg.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_skissm_2fProtoMsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_skissm_2fProtoMsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_skissm_2fProtoMsg_2eproto;
namespace skissm {
class ProtoMsg;
struct ProtoMsgDefaultTypeInternal;
extern ProtoMsgDefaultTypeInternal _ProtoMsg_default_instance_;
}  // namespace skissm
PROTOBUF_NAMESPACE_OPEN
template<> ::skissm::ProtoMsg* Arena::CreateMaybeMessage<::skissm::ProtoMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace skissm {

// ===================================================================

class ProtoMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:skissm.ProtoMsg) */ {
 public:
  inline ProtoMsg() : ProtoMsg(nullptr) {}
  ~ProtoMsg() override;
  explicit constexpr ProtoMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoMsg(const ProtoMsg& from);
  ProtoMsg(ProtoMsg&& from) noexcept
    : ProtoMsg() {
    *this = ::std::move(from);
  }

  inline ProtoMsg& operator=(const ProtoMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoMsg& operator=(ProtoMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoMsg& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kAcceptMsg = 4,
    kAddGroupMembersMsg = 5,
    kCreateGroupMsg = 6,
    kE2EeMsg = 7,
    kInviteMsg = 8,
    kRemoveGroupMembersMsg = 9,
    kSupplyOpksMsg = 10,
    kHeartbeatMsg = 11,
    PAYLOAD_NOT_SET = 0,
  };

  static inline const ProtoMsg* internal_default_instance() {
    return reinterpret_cast<const ProtoMsg*>(
               &_ProtoMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoMsg& a, ProtoMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtoMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ProtoMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "skissm.ProtoMsg";
  }
  protected:
  explicit ProtoMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProtoMsgIdFieldNumber = 1,
    kFromFieldNumber = 2,
    kToFieldNumber = 3,
    kAcceptMsgFieldNumber = 4,
    kAddGroupMembersMsgFieldNumber = 5,
    kCreateGroupMsgFieldNumber = 6,
    kE2EeMsgFieldNumber = 7,
    kInviteMsgFieldNumber = 8,
    kRemoveGroupMembersMsgFieldNumber = 9,
    kSupplyOpksMsgFieldNumber = 10,
    kHeartbeatMsgFieldNumber = 11,
  };
  // string proto_msg_id = 1;
  void clear_proto_msg_id();
  const std::string& proto_msg_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_proto_msg_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_proto_msg_id();
  PROTOBUF_NODISCARD std::string* release_proto_msg_id();
  void set_allocated_proto_msg_id(std::string* proto_msg_id);
  private:
  const std::string& _internal_proto_msg_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proto_msg_id(const std::string& value);
  std::string* _internal_mutable_proto_msg_id();
  public:

  // .skissm.E2eeAddress from = 2;
  bool has_from() const;
  private:
  bool _internal_has_from() const;
  public:
  void clear_from();
  const ::skissm::E2eeAddress& from() const;
  PROTOBUF_NODISCARD ::skissm::E2eeAddress* release_from();
  ::skissm::E2eeAddress* mutable_from();
  void set_allocated_from(::skissm::E2eeAddress* from);
  private:
  const ::skissm::E2eeAddress& _internal_from() const;
  ::skissm::E2eeAddress* _internal_mutable_from();
  public:
  void unsafe_arena_set_allocated_from(
      ::skissm::E2eeAddress* from);
  ::skissm::E2eeAddress* unsafe_arena_release_from();

  // .skissm.E2eeAddress to = 3;
  bool has_to() const;
  private:
  bool _internal_has_to() const;
  public:
  void clear_to();
  const ::skissm::E2eeAddress& to() const;
  PROTOBUF_NODISCARD ::skissm::E2eeAddress* release_to();
  ::skissm::E2eeAddress* mutable_to();
  void set_allocated_to(::skissm::E2eeAddress* to);
  private:
  const ::skissm::E2eeAddress& _internal_to() const;
  ::skissm::E2eeAddress* _internal_mutable_to();
  public:
  void unsafe_arena_set_allocated_to(
      ::skissm::E2eeAddress* to);
  ::skissm::E2eeAddress* unsafe_arena_release_to();

  // .skissm.AcceptMsg accept_msg = 4;
  bool has_accept_msg() const;
  private:
  bool _internal_has_accept_msg() const;
  public:
  void clear_accept_msg();
  const ::skissm::AcceptMsg& accept_msg() const;
  PROTOBUF_NODISCARD ::skissm::AcceptMsg* release_accept_msg();
  ::skissm::AcceptMsg* mutable_accept_msg();
  void set_allocated_accept_msg(::skissm::AcceptMsg* accept_msg);
  private:
  const ::skissm::AcceptMsg& _internal_accept_msg() const;
  ::skissm::AcceptMsg* _internal_mutable_accept_msg();
  public:
  void unsafe_arena_set_allocated_accept_msg(
      ::skissm::AcceptMsg* accept_msg);
  ::skissm::AcceptMsg* unsafe_arena_release_accept_msg();

  // .skissm.AddGroupMembersMsg add_group_members_msg = 5;
  bool has_add_group_members_msg() const;
  private:
  bool _internal_has_add_group_members_msg() const;
  public:
  void clear_add_group_members_msg();
  const ::skissm::AddGroupMembersMsg& add_group_members_msg() const;
  PROTOBUF_NODISCARD ::skissm::AddGroupMembersMsg* release_add_group_members_msg();
  ::skissm::AddGroupMembersMsg* mutable_add_group_members_msg();
  void set_allocated_add_group_members_msg(::skissm::AddGroupMembersMsg* add_group_members_msg);
  private:
  const ::skissm::AddGroupMembersMsg& _internal_add_group_members_msg() const;
  ::skissm::AddGroupMembersMsg* _internal_mutable_add_group_members_msg();
  public:
  void unsafe_arena_set_allocated_add_group_members_msg(
      ::skissm::AddGroupMembersMsg* add_group_members_msg);
  ::skissm::AddGroupMembersMsg* unsafe_arena_release_add_group_members_msg();

  // .skissm.CreateGroupMsg create_group_msg = 6;
  bool has_create_group_msg() const;
  private:
  bool _internal_has_create_group_msg() const;
  public:
  void clear_create_group_msg();
  const ::skissm::CreateGroupMsg& create_group_msg() const;
  PROTOBUF_NODISCARD ::skissm::CreateGroupMsg* release_create_group_msg();
  ::skissm::CreateGroupMsg* mutable_create_group_msg();
  void set_allocated_create_group_msg(::skissm::CreateGroupMsg* create_group_msg);
  private:
  const ::skissm::CreateGroupMsg& _internal_create_group_msg() const;
  ::skissm::CreateGroupMsg* _internal_mutable_create_group_msg();
  public:
  void unsafe_arena_set_allocated_create_group_msg(
      ::skissm::CreateGroupMsg* create_group_msg);
  ::skissm::CreateGroupMsg* unsafe_arena_release_create_group_msg();

  // .skissm.E2eeMsg e2ee_msg = 7;
  bool has_e2ee_msg() const;
  private:
  bool _internal_has_e2ee_msg() const;
  public:
  void clear_e2ee_msg();
  const ::skissm::E2eeMsg& e2ee_msg() const;
  PROTOBUF_NODISCARD ::skissm::E2eeMsg* release_e2ee_msg();
  ::skissm::E2eeMsg* mutable_e2ee_msg();
  void set_allocated_e2ee_msg(::skissm::E2eeMsg* e2ee_msg);
  private:
  const ::skissm::E2eeMsg& _internal_e2ee_msg() const;
  ::skissm::E2eeMsg* _internal_mutable_e2ee_msg();
  public:
  void unsafe_arena_set_allocated_e2ee_msg(
      ::skissm::E2eeMsg* e2ee_msg);
  ::skissm::E2eeMsg* unsafe_arena_release_e2ee_msg();

  // .skissm.InviteMsg invite_msg = 8;
  bool has_invite_msg() const;
  private:
  bool _internal_has_invite_msg() const;
  public:
  void clear_invite_msg();
  const ::skissm::InviteMsg& invite_msg() const;
  PROTOBUF_NODISCARD ::skissm::InviteMsg* release_invite_msg();
  ::skissm::InviteMsg* mutable_invite_msg();
  void set_allocated_invite_msg(::skissm::InviteMsg* invite_msg);
  private:
  const ::skissm::InviteMsg& _internal_invite_msg() const;
  ::skissm::InviteMsg* _internal_mutable_invite_msg();
  public:
  void unsafe_arena_set_allocated_invite_msg(
      ::skissm::InviteMsg* invite_msg);
  ::skissm::InviteMsg* unsafe_arena_release_invite_msg();

  // .skissm.RemoveGroupMembersMsg remove_group_members_msg = 9;
  bool has_remove_group_members_msg() const;
  private:
  bool _internal_has_remove_group_members_msg() const;
  public:
  void clear_remove_group_members_msg();
  const ::skissm::RemoveGroupMembersMsg& remove_group_members_msg() const;
  PROTOBUF_NODISCARD ::skissm::RemoveGroupMembersMsg* release_remove_group_members_msg();
  ::skissm::RemoveGroupMembersMsg* mutable_remove_group_members_msg();
  void set_allocated_remove_group_members_msg(::skissm::RemoveGroupMembersMsg* remove_group_members_msg);
  private:
  const ::skissm::RemoveGroupMembersMsg& _internal_remove_group_members_msg() const;
  ::skissm::RemoveGroupMembersMsg* _internal_mutable_remove_group_members_msg();
  public:
  void unsafe_arena_set_allocated_remove_group_members_msg(
      ::skissm::RemoveGroupMembersMsg* remove_group_members_msg);
  ::skissm::RemoveGroupMembersMsg* unsafe_arena_release_remove_group_members_msg();

  // .skissm.SupplyOpksMsg supply_opks_msg = 10;
  bool has_supply_opks_msg() const;
  private:
  bool _internal_has_supply_opks_msg() const;
  public:
  void clear_supply_opks_msg();
  const ::skissm::SupplyOpksMsg& supply_opks_msg() const;
  PROTOBUF_NODISCARD ::skissm::SupplyOpksMsg* release_supply_opks_msg();
  ::skissm::SupplyOpksMsg* mutable_supply_opks_msg();
  void set_allocated_supply_opks_msg(::skissm::SupplyOpksMsg* supply_opks_msg);
  private:
  const ::skissm::SupplyOpksMsg& _internal_supply_opks_msg() const;
  ::skissm::SupplyOpksMsg* _internal_mutable_supply_opks_msg();
  public:
  void unsafe_arena_set_allocated_supply_opks_msg(
      ::skissm::SupplyOpksMsg* supply_opks_msg);
  ::skissm::SupplyOpksMsg* unsafe_arena_release_supply_opks_msg();

  // .skissm.HeartbeatMsg heartbeat_msg = 11;
  bool has_heartbeat_msg() const;
  private:
  bool _internal_has_heartbeat_msg() const;
  public:
  void clear_heartbeat_msg();
  const ::skissm::HeartbeatMsg& heartbeat_msg() const;
  PROTOBUF_NODISCARD ::skissm::HeartbeatMsg* release_heartbeat_msg();
  ::skissm::HeartbeatMsg* mutable_heartbeat_msg();
  void set_allocated_heartbeat_msg(::skissm::HeartbeatMsg* heartbeat_msg);
  private:
  const ::skissm::HeartbeatMsg& _internal_heartbeat_msg() const;
  ::skissm::HeartbeatMsg* _internal_mutable_heartbeat_msg();
  public:
  void unsafe_arena_set_allocated_heartbeat_msg(
      ::skissm::HeartbeatMsg* heartbeat_msg);
  ::skissm::HeartbeatMsg* unsafe_arena_release_heartbeat_msg();

  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:skissm.ProtoMsg)
 private:
  class _Internal;
  void set_has_accept_msg();
  void set_has_add_group_members_msg();
  void set_has_create_group_msg();
  void set_has_e2ee_msg();
  void set_has_invite_msg();
  void set_has_remove_group_members_msg();
  void set_has_supply_opks_msg();
  void set_has_heartbeat_msg();

  inline bool has_payload() const;
  inline void clear_has_payload();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr proto_msg_id_;
  ::skissm::E2eeAddress* from_;
  ::skissm::E2eeAddress* to_;
  union PayloadUnion {
    constexpr PayloadUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::skissm::AcceptMsg* accept_msg_;
    ::skissm::AddGroupMembersMsg* add_group_members_msg_;
    ::skissm::CreateGroupMsg* create_group_msg_;
    ::skissm::E2eeMsg* e2ee_msg_;
    ::skissm::InviteMsg* invite_msg_;
    ::skissm::RemoveGroupMembersMsg* remove_group_members_msg_;
    ::skissm::SupplyOpksMsg* supply_opks_msg_;
    ::skissm::HeartbeatMsg* heartbeat_msg_;
  } payload_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_skissm_2fProtoMsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoMsg

// string proto_msg_id = 1;
inline void ProtoMsg::clear_proto_msg_id() {
  proto_msg_id_.ClearToEmpty();
}
inline const std::string& ProtoMsg::proto_msg_id() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.proto_msg_id)
  return _internal_proto_msg_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProtoMsg::set_proto_msg_id(ArgT0&& arg0, ArgT... args) {
 
 proto_msg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:skissm.ProtoMsg.proto_msg_id)
}
inline std::string* ProtoMsg::mutable_proto_msg_id() {
  std::string* _s = _internal_mutable_proto_msg_id();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.proto_msg_id)
  return _s;
}
inline const std::string& ProtoMsg::_internal_proto_msg_id() const {
  return proto_msg_id_.Get();
}
inline void ProtoMsg::_internal_set_proto_msg_id(const std::string& value) {
  
  proto_msg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProtoMsg::_internal_mutable_proto_msg_id() {
  
  return proto_msg_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProtoMsg::release_proto_msg_id() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.proto_msg_id)
  return proto_msg_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProtoMsg::set_allocated_proto_msg_id(std::string* proto_msg_id) {
  if (proto_msg_id != nullptr) {
    
  } else {
    
  }
  proto_msg_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), proto_msg_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (proto_msg_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    proto_msg_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.proto_msg_id)
}

// .skissm.E2eeAddress from = 2;
inline bool ProtoMsg::_internal_has_from() const {
  return this != internal_default_instance() && from_ != nullptr;
}
inline bool ProtoMsg::has_from() const {
  return _internal_has_from();
}
inline const ::skissm::E2eeAddress& ProtoMsg::_internal_from() const {
  const ::skissm::E2eeAddress* p = from_;
  return p != nullptr ? *p : reinterpret_cast<const ::skissm::E2eeAddress&>(
      ::skissm::_E2eeAddress_default_instance_);
}
inline const ::skissm::E2eeAddress& ProtoMsg::from() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.from)
  return _internal_from();
}
inline void ProtoMsg::unsafe_arena_set_allocated_from(
    ::skissm::E2eeAddress* from) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_);
  }
  from_ = from;
  if (from) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.from)
}
inline ::skissm::E2eeAddress* ProtoMsg::release_from() {
  
  ::skissm::E2eeAddress* temp = from_;
  from_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::skissm::E2eeAddress* ProtoMsg::unsafe_arena_release_from() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.from)
  
  ::skissm::E2eeAddress* temp = from_;
  from_ = nullptr;
  return temp;
}
inline ::skissm::E2eeAddress* ProtoMsg::_internal_mutable_from() {
  
  if (from_ == nullptr) {
    auto* p = CreateMaybeMessage<::skissm::E2eeAddress>(GetArenaForAllocation());
    from_ = p;
  }
  return from_;
}
inline ::skissm::E2eeAddress* ProtoMsg::mutable_from() {
  ::skissm::E2eeAddress* _msg = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.from)
  return _msg;
}
inline void ProtoMsg::set_allocated_from(::skissm::E2eeAddress* from) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_);
  }
  if (from) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(from));
    if (message_arena != submessage_arena) {
      from = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, from, submessage_arena);
    }
    
  } else {
    
  }
  from_ = from;
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.from)
}

// .skissm.E2eeAddress to = 3;
inline bool ProtoMsg::_internal_has_to() const {
  return this != internal_default_instance() && to_ != nullptr;
}
inline bool ProtoMsg::has_to() const {
  return _internal_has_to();
}
inline const ::skissm::E2eeAddress& ProtoMsg::_internal_to() const {
  const ::skissm::E2eeAddress* p = to_;
  return p != nullptr ? *p : reinterpret_cast<const ::skissm::E2eeAddress&>(
      ::skissm::_E2eeAddress_default_instance_);
}
inline const ::skissm::E2eeAddress& ProtoMsg::to() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.to)
  return _internal_to();
}
inline void ProtoMsg::unsafe_arena_set_allocated_to(
    ::skissm::E2eeAddress* to) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(to_);
  }
  to_ = to;
  if (to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.to)
}
inline ::skissm::E2eeAddress* ProtoMsg::release_to() {
  
  ::skissm::E2eeAddress* temp = to_;
  to_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::skissm::E2eeAddress* ProtoMsg::unsafe_arena_release_to() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.to)
  
  ::skissm::E2eeAddress* temp = to_;
  to_ = nullptr;
  return temp;
}
inline ::skissm::E2eeAddress* ProtoMsg::_internal_mutable_to() {
  
  if (to_ == nullptr) {
    auto* p = CreateMaybeMessage<::skissm::E2eeAddress>(GetArenaForAllocation());
    to_ = p;
  }
  return to_;
}
inline ::skissm::E2eeAddress* ProtoMsg::mutable_to() {
  ::skissm::E2eeAddress* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.to)
  return _msg;
}
inline void ProtoMsg::set_allocated_to(::skissm::E2eeAddress* to) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(to_);
  }
  if (to) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(to));
    if (message_arena != submessage_arena) {
      to = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, to, submessage_arena);
    }
    
  } else {
    
  }
  to_ = to;
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.to)
}

// .skissm.AcceptMsg accept_msg = 4;
inline bool ProtoMsg::_internal_has_accept_msg() const {
  return payload_case() == kAcceptMsg;
}
inline bool ProtoMsg::has_accept_msg() const {
  return _internal_has_accept_msg();
}
inline void ProtoMsg::set_has_accept_msg() {
  _oneof_case_[0] = kAcceptMsg;
}
inline ::skissm::AcceptMsg* ProtoMsg::release_accept_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.accept_msg)
  if (_internal_has_accept_msg()) {
    clear_has_payload();
      ::skissm::AcceptMsg* temp = payload_.accept_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.accept_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::AcceptMsg& ProtoMsg::_internal_accept_msg() const {
  return _internal_has_accept_msg()
      ? *payload_.accept_msg_
      : reinterpret_cast< ::skissm::AcceptMsg&>(::skissm::_AcceptMsg_default_instance_);
}
inline const ::skissm::AcceptMsg& ProtoMsg::accept_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.accept_msg)
  return _internal_accept_msg();
}
inline ::skissm::AcceptMsg* ProtoMsg::unsafe_arena_release_accept_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.accept_msg)
  if (_internal_has_accept_msg()) {
    clear_has_payload();
    ::skissm::AcceptMsg* temp = payload_.accept_msg_;
    payload_.accept_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_accept_msg(::skissm::AcceptMsg* accept_msg) {
  clear_payload();
  if (accept_msg) {
    set_has_accept_msg();
    payload_.accept_msg_ = accept_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.accept_msg)
}
inline ::skissm::AcceptMsg* ProtoMsg::_internal_mutable_accept_msg() {
  if (!_internal_has_accept_msg()) {
    clear_payload();
    set_has_accept_msg();
    payload_.accept_msg_ = CreateMaybeMessage< ::skissm::AcceptMsg >(GetArenaForAllocation());
  }
  return payload_.accept_msg_;
}
inline ::skissm::AcceptMsg* ProtoMsg::mutable_accept_msg() {
  ::skissm::AcceptMsg* _msg = _internal_mutable_accept_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.accept_msg)
  return _msg;
}

// .skissm.AddGroupMembersMsg add_group_members_msg = 5;
inline bool ProtoMsg::_internal_has_add_group_members_msg() const {
  return payload_case() == kAddGroupMembersMsg;
}
inline bool ProtoMsg::has_add_group_members_msg() const {
  return _internal_has_add_group_members_msg();
}
inline void ProtoMsg::set_has_add_group_members_msg() {
  _oneof_case_[0] = kAddGroupMembersMsg;
}
inline ::skissm::AddGroupMembersMsg* ProtoMsg::release_add_group_members_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.add_group_members_msg)
  if (_internal_has_add_group_members_msg()) {
    clear_has_payload();
      ::skissm::AddGroupMembersMsg* temp = payload_.add_group_members_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.add_group_members_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::AddGroupMembersMsg& ProtoMsg::_internal_add_group_members_msg() const {
  return _internal_has_add_group_members_msg()
      ? *payload_.add_group_members_msg_
      : reinterpret_cast< ::skissm::AddGroupMembersMsg&>(::skissm::_AddGroupMembersMsg_default_instance_);
}
inline const ::skissm::AddGroupMembersMsg& ProtoMsg::add_group_members_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.add_group_members_msg)
  return _internal_add_group_members_msg();
}
inline ::skissm::AddGroupMembersMsg* ProtoMsg::unsafe_arena_release_add_group_members_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.add_group_members_msg)
  if (_internal_has_add_group_members_msg()) {
    clear_has_payload();
    ::skissm::AddGroupMembersMsg* temp = payload_.add_group_members_msg_;
    payload_.add_group_members_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_add_group_members_msg(::skissm::AddGroupMembersMsg* add_group_members_msg) {
  clear_payload();
  if (add_group_members_msg) {
    set_has_add_group_members_msg();
    payload_.add_group_members_msg_ = add_group_members_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.add_group_members_msg)
}
inline ::skissm::AddGroupMembersMsg* ProtoMsg::_internal_mutable_add_group_members_msg() {
  if (!_internal_has_add_group_members_msg()) {
    clear_payload();
    set_has_add_group_members_msg();
    payload_.add_group_members_msg_ = CreateMaybeMessage< ::skissm::AddGroupMembersMsg >(GetArenaForAllocation());
  }
  return payload_.add_group_members_msg_;
}
inline ::skissm::AddGroupMembersMsg* ProtoMsg::mutable_add_group_members_msg() {
  ::skissm::AddGroupMembersMsg* _msg = _internal_mutable_add_group_members_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.add_group_members_msg)
  return _msg;
}

// .skissm.CreateGroupMsg create_group_msg = 6;
inline bool ProtoMsg::_internal_has_create_group_msg() const {
  return payload_case() == kCreateGroupMsg;
}
inline bool ProtoMsg::has_create_group_msg() const {
  return _internal_has_create_group_msg();
}
inline void ProtoMsg::set_has_create_group_msg() {
  _oneof_case_[0] = kCreateGroupMsg;
}
inline ::skissm::CreateGroupMsg* ProtoMsg::release_create_group_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.create_group_msg)
  if (_internal_has_create_group_msg()) {
    clear_has_payload();
      ::skissm::CreateGroupMsg* temp = payload_.create_group_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.create_group_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::CreateGroupMsg& ProtoMsg::_internal_create_group_msg() const {
  return _internal_has_create_group_msg()
      ? *payload_.create_group_msg_
      : reinterpret_cast< ::skissm::CreateGroupMsg&>(::skissm::_CreateGroupMsg_default_instance_);
}
inline const ::skissm::CreateGroupMsg& ProtoMsg::create_group_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.create_group_msg)
  return _internal_create_group_msg();
}
inline ::skissm::CreateGroupMsg* ProtoMsg::unsafe_arena_release_create_group_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.create_group_msg)
  if (_internal_has_create_group_msg()) {
    clear_has_payload();
    ::skissm::CreateGroupMsg* temp = payload_.create_group_msg_;
    payload_.create_group_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_create_group_msg(::skissm::CreateGroupMsg* create_group_msg) {
  clear_payload();
  if (create_group_msg) {
    set_has_create_group_msg();
    payload_.create_group_msg_ = create_group_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.create_group_msg)
}
inline ::skissm::CreateGroupMsg* ProtoMsg::_internal_mutable_create_group_msg() {
  if (!_internal_has_create_group_msg()) {
    clear_payload();
    set_has_create_group_msg();
    payload_.create_group_msg_ = CreateMaybeMessage< ::skissm::CreateGroupMsg >(GetArenaForAllocation());
  }
  return payload_.create_group_msg_;
}
inline ::skissm::CreateGroupMsg* ProtoMsg::mutable_create_group_msg() {
  ::skissm::CreateGroupMsg* _msg = _internal_mutable_create_group_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.create_group_msg)
  return _msg;
}

// .skissm.E2eeMsg e2ee_msg = 7;
inline bool ProtoMsg::_internal_has_e2ee_msg() const {
  return payload_case() == kE2EeMsg;
}
inline bool ProtoMsg::has_e2ee_msg() const {
  return _internal_has_e2ee_msg();
}
inline void ProtoMsg::set_has_e2ee_msg() {
  _oneof_case_[0] = kE2EeMsg;
}
inline ::skissm::E2eeMsg* ProtoMsg::release_e2ee_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.e2ee_msg)
  if (_internal_has_e2ee_msg()) {
    clear_has_payload();
      ::skissm::E2eeMsg* temp = payload_.e2ee_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.e2ee_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::E2eeMsg& ProtoMsg::_internal_e2ee_msg() const {
  return _internal_has_e2ee_msg()
      ? *payload_.e2ee_msg_
      : reinterpret_cast< ::skissm::E2eeMsg&>(::skissm::_E2eeMsg_default_instance_);
}
inline const ::skissm::E2eeMsg& ProtoMsg::e2ee_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.e2ee_msg)
  return _internal_e2ee_msg();
}
inline ::skissm::E2eeMsg* ProtoMsg::unsafe_arena_release_e2ee_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.e2ee_msg)
  if (_internal_has_e2ee_msg()) {
    clear_has_payload();
    ::skissm::E2eeMsg* temp = payload_.e2ee_msg_;
    payload_.e2ee_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_e2ee_msg(::skissm::E2eeMsg* e2ee_msg) {
  clear_payload();
  if (e2ee_msg) {
    set_has_e2ee_msg();
    payload_.e2ee_msg_ = e2ee_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.e2ee_msg)
}
inline ::skissm::E2eeMsg* ProtoMsg::_internal_mutable_e2ee_msg() {
  if (!_internal_has_e2ee_msg()) {
    clear_payload();
    set_has_e2ee_msg();
    payload_.e2ee_msg_ = CreateMaybeMessage< ::skissm::E2eeMsg >(GetArenaForAllocation());
  }
  return payload_.e2ee_msg_;
}
inline ::skissm::E2eeMsg* ProtoMsg::mutable_e2ee_msg() {
  ::skissm::E2eeMsg* _msg = _internal_mutable_e2ee_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.e2ee_msg)
  return _msg;
}

// .skissm.InviteMsg invite_msg = 8;
inline bool ProtoMsg::_internal_has_invite_msg() const {
  return payload_case() == kInviteMsg;
}
inline bool ProtoMsg::has_invite_msg() const {
  return _internal_has_invite_msg();
}
inline void ProtoMsg::set_has_invite_msg() {
  _oneof_case_[0] = kInviteMsg;
}
inline ::skissm::InviteMsg* ProtoMsg::release_invite_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.invite_msg)
  if (_internal_has_invite_msg()) {
    clear_has_payload();
      ::skissm::InviteMsg* temp = payload_.invite_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.invite_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::InviteMsg& ProtoMsg::_internal_invite_msg() const {
  return _internal_has_invite_msg()
      ? *payload_.invite_msg_
      : reinterpret_cast< ::skissm::InviteMsg&>(::skissm::_InviteMsg_default_instance_);
}
inline const ::skissm::InviteMsg& ProtoMsg::invite_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.invite_msg)
  return _internal_invite_msg();
}
inline ::skissm::InviteMsg* ProtoMsg::unsafe_arena_release_invite_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.invite_msg)
  if (_internal_has_invite_msg()) {
    clear_has_payload();
    ::skissm::InviteMsg* temp = payload_.invite_msg_;
    payload_.invite_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_invite_msg(::skissm::InviteMsg* invite_msg) {
  clear_payload();
  if (invite_msg) {
    set_has_invite_msg();
    payload_.invite_msg_ = invite_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.invite_msg)
}
inline ::skissm::InviteMsg* ProtoMsg::_internal_mutable_invite_msg() {
  if (!_internal_has_invite_msg()) {
    clear_payload();
    set_has_invite_msg();
    payload_.invite_msg_ = CreateMaybeMessage< ::skissm::InviteMsg >(GetArenaForAllocation());
  }
  return payload_.invite_msg_;
}
inline ::skissm::InviteMsg* ProtoMsg::mutable_invite_msg() {
  ::skissm::InviteMsg* _msg = _internal_mutable_invite_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.invite_msg)
  return _msg;
}

// .skissm.RemoveGroupMembersMsg remove_group_members_msg = 9;
inline bool ProtoMsg::_internal_has_remove_group_members_msg() const {
  return payload_case() == kRemoveGroupMembersMsg;
}
inline bool ProtoMsg::has_remove_group_members_msg() const {
  return _internal_has_remove_group_members_msg();
}
inline void ProtoMsg::set_has_remove_group_members_msg() {
  _oneof_case_[0] = kRemoveGroupMembersMsg;
}
inline ::skissm::RemoveGroupMembersMsg* ProtoMsg::release_remove_group_members_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.remove_group_members_msg)
  if (_internal_has_remove_group_members_msg()) {
    clear_has_payload();
      ::skissm::RemoveGroupMembersMsg* temp = payload_.remove_group_members_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.remove_group_members_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::RemoveGroupMembersMsg& ProtoMsg::_internal_remove_group_members_msg() const {
  return _internal_has_remove_group_members_msg()
      ? *payload_.remove_group_members_msg_
      : reinterpret_cast< ::skissm::RemoveGroupMembersMsg&>(::skissm::_RemoveGroupMembersMsg_default_instance_);
}
inline const ::skissm::RemoveGroupMembersMsg& ProtoMsg::remove_group_members_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.remove_group_members_msg)
  return _internal_remove_group_members_msg();
}
inline ::skissm::RemoveGroupMembersMsg* ProtoMsg::unsafe_arena_release_remove_group_members_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.remove_group_members_msg)
  if (_internal_has_remove_group_members_msg()) {
    clear_has_payload();
    ::skissm::RemoveGroupMembersMsg* temp = payload_.remove_group_members_msg_;
    payload_.remove_group_members_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_remove_group_members_msg(::skissm::RemoveGroupMembersMsg* remove_group_members_msg) {
  clear_payload();
  if (remove_group_members_msg) {
    set_has_remove_group_members_msg();
    payload_.remove_group_members_msg_ = remove_group_members_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.remove_group_members_msg)
}
inline ::skissm::RemoveGroupMembersMsg* ProtoMsg::_internal_mutable_remove_group_members_msg() {
  if (!_internal_has_remove_group_members_msg()) {
    clear_payload();
    set_has_remove_group_members_msg();
    payload_.remove_group_members_msg_ = CreateMaybeMessage< ::skissm::RemoveGroupMembersMsg >(GetArenaForAllocation());
  }
  return payload_.remove_group_members_msg_;
}
inline ::skissm::RemoveGroupMembersMsg* ProtoMsg::mutable_remove_group_members_msg() {
  ::skissm::RemoveGroupMembersMsg* _msg = _internal_mutable_remove_group_members_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.remove_group_members_msg)
  return _msg;
}

// .skissm.SupplyOpksMsg supply_opks_msg = 10;
inline bool ProtoMsg::_internal_has_supply_opks_msg() const {
  return payload_case() == kSupplyOpksMsg;
}
inline bool ProtoMsg::has_supply_opks_msg() const {
  return _internal_has_supply_opks_msg();
}
inline void ProtoMsg::set_has_supply_opks_msg() {
  _oneof_case_[0] = kSupplyOpksMsg;
}
inline ::skissm::SupplyOpksMsg* ProtoMsg::release_supply_opks_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.supply_opks_msg)
  if (_internal_has_supply_opks_msg()) {
    clear_has_payload();
      ::skissm::SupplyOpksMsg* temp = payload_.supply_opks_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.supply_opks_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::SupplyOpksMsg& ProtoMsg::_internal_supply_opks_msg() const {
  return _internal_has_supply_opks_msg()
      ? *payload_.supply_opks_msg_
      : reinterpret_cast< ::skissm::SupplyOpksMsg&>(::skissm::_SupplyOpksMsg_default_instance_);
}
inline const ::skissm::SupplyOpksMsg& ProtoMsg::supply_opks_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.supply_opks_msg)
  return _internal_supply_opks_msg();
}
inline ::skissm::SupplyOpksMsg* ProtoMsg::unsafe_arena_release_supply_opks_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.supply_opks_msg)
  if (_internal_has_supply_opks_msg()) {
    clear_has_payload();
    ::skissm::SupplyOpksMsg* temp = payload_.supply_opks_msg_;
    payload_.supply_opks_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_supply_opks_msg(::skissm::SupplyOpksMsg* supply_opks_msg) {
  clear_payload();
  if (supply_opks_msg) {
    set_has_supply_opks_msg();
    payload_.supply_opks_msg_ = supply_opks_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.supply_opks_msg)
}
inline ::skissm::SupplyOpksMsg* ProtoMsg::_internal_mutable_supply_opks_msg() {
  if (!_internal_has_supply_opks_msg()) {
    clear_payload();
    set_has_supply_opks_msg();
    payload_.supply_opks_msg_ = CreateMaybeMessage< ::skissm::SupplyOpksMsg >(GetArenaForAllocation());
  }
  return payload_.supply_opks_msg_;
}
inline ::skissm::SupplyOpksMsg* ProtoMsg::mutable_supply_opks_msg() {
  ::skissm::SupplyOpksMsg* _msg = _internal_mutable_supply_opks_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.supply_opks_msg)
  return _msg;
}

// .skissm.HeartbeatMsg heartbeat_msg = 11;
inline bool ProtoMsg::_internal_has_heartbeat_msg() const {
  return payload_case() == kHeartbeatMsg;
}
inline bool ProtoMsg::has_heartbeat_msg() const {
  return _internal_has_heartbeat_msg();
}
inline void ProtoMsg::set_has_heartbeat_msg() {
  _oneof_case_[0] = kHeartbeatMsg;
}
inline ::skissm::HeartbeatMsg* ProtoMsg::release_heartbeat_msg() {
  // @@protoc_insertion_point(field_release:skissm.ProtoMsg.heartbeat_msg)
  if (_internal_has_heartbeat_msg()) {
    clear_has_payload();
      ::skissm::HeartbeatMsg* temp = payload_.heartbeat_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    payload_.heartbeat_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::skissm::HeartbeatMsg& ProtoMsg::_internal_heartbeat_msg() const {
  return _internal_has_heartbeat_msg()
      ? *payload_.heartbeat_msg_
      : reinterpret_cast< ::skissm::HeartbeatMsg&>(::skissm::_HeartbeatMsg_default_instance_);
}
inline const ::skissm::HeartbeatMsg& ProtoMsg::heartbeat_msg() const {
  // @@protoc_insertion_point(field_get:skissm.ProtoMsg.heartbeat_msg)
  return _internal_heartbeat_msg();
}
inline ::skissm::HeartbeatMsg* ProtoMsg::unsafe_arena_release_heartbeat_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:skissm.ProtoMsg.heartbeat_msg)
  if (_internal_has_heartbeat_msg()) {
    clear_has_payload();
    ::skissm::HeartbeatMsg* temp = payload_.heartbeat_msg_;
    payload_.heartbeat_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtoMsg::unsafe_arena_set_allocated_heartbeat_msg(::skissm::HeartbeatMsg* heartbeat_msg) {
  clear_payload();
  if (heartbeat_msg) {
    set_has_heartbeat_msg();
    payload_.heartbeat_msg_ = heartbeat_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:skissm.ProtoMsg.heartbeat_msg)
}
inline ::skissm::HeartbeatMsg* ProtoMsg::_internal_mutable_heartbeat_msg() {
  if (!_internal_has_heartbeat_msg()) {
    clear_payload();
    set_has_heartbeat_msg();
    payload_.heartbeat_msg_ = CreateMaybeMessage< ::skissm::HeartbeatMsg >(GetArenaForAllocation());
  }
  return payload_.heartbeat_msg_;
}
inline ::skissm::HeartbeatMsg* ProtoMsg::mutable_heartbeat_msg() {
  ::skissm::HeartbeatMsg* _msg = _internal_mutable_heartbeat_msg();
  // @@protoc_insertion_point(field_mutable:skissm.ProtoMsg.heartbeat_msg)
  return _msg;
}

inline bool ProtoMsg::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void ProtoMsg::clear_has_payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline ProtoMsg::PayloadCase ProtoMsg::payload_case() const {
  return ProtoMsg::PayloadCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace skissm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_skissm_2fProtoMsg_2eproto
