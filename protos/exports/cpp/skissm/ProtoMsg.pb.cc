// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skissm/ProtoMsg.proto

#include "skissm/ProtoMsg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace skissm {
constexpr ProtoMsg::ProtoMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : proto_msg_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , from_(nullptr)
  , to_(nullptr)
  , _oneof_case_{}{}
struct ProtoMsgDefaultTypeInternal {
  constexpr ProtoMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtoMsgDefaultTypeInternal() {}
  union {
    ProtoMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtoMsgDefaultTypeInternal _ProtoMsg_default_instance_;
}  // namespace skissm
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_skissm_2fProtoMsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_skissm_2fProtoMsg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_skissm_2fProtoMsg_2eproto = nullptr;

const uint32_t TableStruct_skissm_2fProtoMsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, proto_msg_id_),
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, from_),
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, to_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::skissm::ProtoMsg, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::skissm::ProtoMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::skissm::_ProtoMsg_default_instance_),
};

const char descriptor_table_protodef_skissm_2fProtoMsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025skissm/ProtoMsg.proto\022\006skissm\032\030skissm/"
  "E2eeAddress.proto\032\026skissm/AcceptMsg.prot"
  "o\032\037skissm/AddGroupMembersMsg.proto\032\033skis"
  "sm/CreateGroupMsg.proto\032\024skissm/E2eeMsg."
  "proto\032\031skissm/HeartbeatMsg.proto\032\026skissm"
  "/InviteMsg.proto\032\"skissm/RemoveGroupMemb"
  "ersMsg.proto\032\032skissm/SupplyOpksMsg.proto"
  "\"\373\003\n\010ProtoMsg\022\024\n\014proto_msg_id\030\001 \001(\t\022!\n\004f"
  "rom\030\002 \001(\0132\023.skissm.E2eeAddress\022\037\n\002to\030\003 \001"
  "(\0132\023.skissm.E2eeAddress\022\'\n\naccept_msg\030\004 "
  "\001(\0132\021.skissm.AcceptMsgH\000\022;\n\025add_group_me"
  "mbers_msg\030\005 \001(\0132\032.skissm.AddGroupMembers"
  "MsgH\000\0222\n\020create_group_msg\030\006 \001(\0132\026.skissm"
  ".CreateGroupMsgH\000\022#\n\010e2ee_msg\030\007 \001(\0132\017.sk"
  "issm.E2eeMsgH\000\022\'\n\ninvite_msg\030\010 \001(\0132\021.ski"
  "ssm.InviteMsgH\000\022A\n\030remove_group_members_"
  "msg\030\t \001(\0132\035.skissm.RemoveGroupMembersMsg"
  "H\000\0220\n\017supply_opks_msg\030\n \001(\0132\025.skissm.Sup"
  "plyOpksMsgH\000\022-\n\rheartbeat_msg\030\013 \001(\0132\024.sk"
  "issm.HeartbeatMsgH\000B\t\n\007payloadB)\n\030org.e2"
  "eelab.skissm.protoB\rProtoMsgProtob\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_skissm_2fProtoMsg_2eproto_deps[9] = {
  &::descriptor_table_skissm_2fAcceptMsg_2eproto,
  &::descriptor_table_skissm_2fAddGroupMembersMsg_2eproto,
  &::descriptor_table_skissm_2fCreateGroupMsg_2eproto,
  &::descriptor_table_skissm_2fE2eeAddress_2eproto,
  &::descriptor_table_skissm_2fE2eeMsg_2eproto,
  &::descriptor_table_skissm_2fHeartbeatMsg_2eproto,
  &::descriptor_table_skissm_2fInviteMsg_2eproto,
  &::descriptor_table_skissm_2fRemoveGroupMembersMsg_2eproto,
  &::descriptor_table_skissm_2fSupplyOpksMsg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_skissm_2fProtoMsg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_skissm_2fProtoMsg_2eproto = {
  false, false, 841, descriptor_table_protodef_skissm_2fProtoMsg_2eproto, "skissm/ProtoMsg.proto", 
  &descriptor_table_skissm_2fProtoMsg_2eproto_once, descriptor_table_skissm_2fProtoMsg_2eproto_deps, 9, 1,
  schemas, file_default_instances, TableStruct_skissm_2fProtoMsg_2eproto::offsets,
  file_level_metadata_skissm_2fProtoMsg_2eproto, file_level_enum_descriptors_skissm_2fProtoMsg_2eproto, file_level_service_descriptors_skissm_2fProtoMsg_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_skissm_2fProtoMsg_2eproto_getter() {
  return &descriptor_table_skissm_2fProtoMsg_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_skissm_2fProtoMsg_2eproto(&descriptor_table_skissm_2fProtoMsg_2eproto);
namespace skissm {

// ===================================================================

class ProtoMsg::_Internal {
 public:
  static const ::skissm::E2eeAddress& from(const ProtoMsg* msg);
  static const ::skissm::E2eeAddress& to(const ProtoMsg* msg);
  static const ::skissm::AcceptMsg& accept_msg(const ProtoMsg* msg);
  static const ::skissm::AddGroupMembersMsg& add_group_members_msg(const ProtoMsg* msg);
  static const ::skissm::CreateGroupMsg& create_group_msg(const ProtoMsg* msg);
  static const ::skissm::E2eeMsg& e2ee_msg(const ProtoMsg* msg);
  static const ::skissm::InviteMsg& invite_msg(const ProtoMsg* msg);
  static const ::skissm::RemoveGroupMembersMsg& remove_group_members_msg(const ProtoMsg* msg);
  static const ::skissm::SupplyOpksMsg& supply_opks_msg(const ProtoMsg* msg);
  static const ::skissm::HeartbeatMsg& heartbeat_msg(const ProtoMsg* msg);
};

const ::skissm::E2eeAddress&
ProtoMsg::_Internal::from(const ProtoMsg* msg) {
  return *msg->from_;
}
const ::skissm::E2eeAddress&
ProtoMsg::_Internal::to(const ProtoMsg* msg) {
  return *msg->to_;
}
const ::skissm::AcceptMsg&
ProtoMsg::_Internal::accept_msg(const ProtoMsg* msg) {
  return *msg->payload_.accept_msg_;
}
const ::skissm::AddGroupMembersMsg&
ProtoMsg::_Internal::add_group_members_msg(const ProtoMsg* msg) {
  return *msg->payload_.add_group_members_msg_;
}
const ::skissm::CreateGroupMsg&
ProtoMsg::_Internal::create_group_msg(const ProtoMsg* msg) {
  return *msg->payload_.create_group_msg_;
}
const ::skissm::E2eeMsg&
ProtoMsg::_Internal::e2ee_msg(const ProtoMsg* msg) {
  return *msg->payload_.e2ee_msg_;
}
const ::skissm::InviteMsg&
ProtoMsg::_Internal::invite_msg(const ProtoMsg* msg) {
  return *msg->payload_.invite_msg_;
}
const ::skissm::RemoveGroupMembersMsg&
ProtoMsg::_Internal::remove_group_members_msg(const ProtoMsg* msg) {
  return *msg->payload_.remove_group_members_msg_;
}
const ::skissm::SupplyOpksMsg&
ProtoMsg::_Internal::supply_opks_msg(const ProtoMsg* msg) {
  return *msg->payload_.supply_opks_msg_;
}
const ::skissm::HeartbeatMsg&
ProtoMsg::_Internal::heartbeat_msg(const ProtoMsg* msg) {
  return *msg->payload_.heartbeat_msg_;
}
void ProtoMsg::clear_from() {
  if (GetArenaForAllocation() == nullptr && from_ != nullptr) {
    delete from_;
  }
  from_ = nullptr;
}
void ProtoMsg::clear_to() {
  if (GetArenaForAllocation() == nullptr && to_ != nullptr) {
    delete to_;
  }
  to_ = nullptr;
}
void ProtoMsg::set_allocated_accept_msg(::skissm::AcceptMsg* accept_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (accept_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(accept_msg));
    if (message_arena != submessage_arena) {
      accept_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accept_msg, submessage_arena);
    }
    set_has_accept_msg();
    payload_.accept_msg_ = accept_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.accept_msg)
}
void ProtoMsg::clear_accept_msg() {
  if (_internal_has_accept_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.accept_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_add_group_members_msg(::skissm::AddGroupMembersMsg* add_group_members_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (add_group_members_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(add_group_members_msg));
    if (message_arena != submessage_arena) {
      add_group_members_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add_group_members_msg, submessage_arena);
    }
    set_has_add_group_members_msg();
    payload_.add_group_members_msg_ = add_group_members_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.add_group_members_msg)
}
void ProtoMsg::clear_add_group_members_msg() {
  if (_internal_has_add_group_members_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.add_group_members_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_create_group_msg(::skissm::CreateGroupMsg* create_group_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (create_group_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_group_msg));
    if (message_arena != submessage_arena) {
      create_group_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_group_msg, submessage_arena);
    }
    set_has_create_group_msg();
    payload_.create_group_msg_ = create_group_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.create_group_msg)
}
void ProtoMsg::clear_create_group_msg() {
  if (_internal_has_create_group_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.create_group_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_e2ee_msg(::skissm::E2eeMsg* e2ee_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (e2ee_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(e2ee_msg));
    if (message_arena != submessage_arena) {
      e2ee_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, e2ee_msg, submessage_arena);
    }
    set_has_e2ee_msg();
    payload_.e2ee_msg_ = e2ee_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.e2ee_msg)
}
void ProtoMsg::clear_e2ee_msg() {
  if (_internal_has_e2ee_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.e2ee_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_invite_msg(::skissm::InviteMsg* invite_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (invite_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(invite_msg));
    if (message_arena != submessage_arena) {
      invite_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invite_msg, submessage_arena);
    }
    set_has_invite_msg();
    payload_.invite_msg_ = invite_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.invite_msg)
}
void ProtoMsg::clear_invite_msg() {
  if (_internal_has_invite_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.invite_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_remove_group_members_msg(::skissm::RemoveGroupMembersMsg* remove_group_members_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (remove_group_members_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(remove_group_members_msg));
    if (message_arena != submessage_arena) {
      remove_group_members_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remove_group_members_msg, submessage_arena);
    }
    set_has_remove_group_members_msg();
    payload_.remove_group_members_msg_ = remove_group_members_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.remove_group_members_msg)
}
void ProtoMsg::clear_remove_group_members_msg() {
  if (_internal_has_remove_group_members_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.remove_group_members_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_supply_opks_msg(::skissm::SupplyOpksMsg* supply_opks_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (supply_opks_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(supply_opks_msg));
    if (message_arena != submessage_arena) {
      supply_opks_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, supply_opks_msg, submessage_arena);
    }
    set_has_supply_opks_msg();
    payload_.supply_opks_msg_ = supply_opks_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.supply_opks_msg)
}
void ProtoMsg::clear_supply_opks_msg() {
  if (_internal_has_supply_opks_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.supply_opks_msg_;
    }
    clear_has_payload();
  }
}
void ProtoMsg::set_allocated_heartbeat_msg(::skissm::HeartbeatMsg* heartbeat_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (heartbeat_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heartbeat_msg));
    if (message_arena != submessage_arena) {
      heartbeat_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heartbeat_msg, submessage_arena);
    }
    set_has_heartbeat_msg();
    payload_.heartbeat_msg_ = heartbeat_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:skissm.ProtoMsg.heartbeat_msg)
}
void ProtoMsg::clear_heartbeat_msg() {
  if (_internal_has_heartbeat_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.heartbeat_msg_;
    }
    clear_has_payload();
  }
}
ProtoMsg::ProtoMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:skissm.ProtoMsg)
}
ProtoMsg::ProtoMsg(const ProtoMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proto_msg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    proto_msg_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proto_msg_id().empty()) {
    proto_msg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_proto_msg_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_from()) {
    from_ = new ::skissm::E2eeAddress(*from.from_);
  } else {
    from_ = nullptr;
  }
  if (from._internal_has_to()) {
    to_ = new ::skissm::E2eeAddress(*from.to_);
  } else {
    to_ = nullptr;
  }
  clear_has_payload();
  switch (from.payload_case()) {
    case kAcceptMsg: {
      _internal_mutable_accept_msg()->::skissm::AcceptMsg::MergeFrom(from._internal_accept_msg());
      break;
    }
    case kAddGroupMembersMsg: {
      _internal_mutable_add_group_members_msg()->::skissm::AddGroupMembersMsg::MergeFrom(from._internal_add_group_members_msg());
      break;
    }
    case kCreateGroupMsg: {
      _internal_mutable_create_group_msg()->::skissm::CreateGroupMsg::MergeFrom(from._internal_create_group_msg());
      break;
    }
    case kE2EeMsg: {
      _internal_mutable_e2ee_msg()->::skissm::E2eeMsg::MergeFrom(from._internal_e2ee_msg());
      break;
    }
    case kInviteMsg: {
      _internal_mutable_invite_msg()->::skissm::InviteMsg::MergeFrom(from._internal_invite_msg());
      break;
    }
    case kRemoveGroupMembersMsg: {
      _internal_mutable_remove_group_members_msg()->::skissm::RemoveGroupMembersMsg::MergeFrom(from._internal_remove_group_members_msg());
      break;
    }
    case kSupplyOpksMsg: {
      _internal_mutable_supply_opks_msg()->::skissm::SupplyOpksMsg::MergeFrom(from._internal_supply_opks_msg());
      break;
    }
    case kHeartbeatMsg: {
      _internal_mutable_heartbeat_msg()->::skissm::HeartbeatMsg::MergeFrom(from._internal_heartbeat_msg());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:skissm.ProtoMsg)
}

inline void ProtoMsg::SharedCtor() {
proto_msg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  proto_msg_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&from_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&from_)) + sizeof(to_));
clear_has_payload();
}

ProtoMsg::~ProtoMsg() {
  // @@protoc_insertion_point(destructor:skissm.ProtoMsg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtoMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  proto_msg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete to_;
  if (has_payload()) {
    clear_payload();
  }
}

void ProtoMsg::ArenaDtor(void* object) {
  ProtoMsg* _this = reinterpret_cast< ProtoMsg* >(object);
  (void)_this;
}
void ProtoMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtoMsg::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:skissm.ProtoMsg)
  switch (payload_case()) {
    case kAcceptMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.accept_msg_;
      }
      break;
    }
    case kAddGroupMembersMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.add_group_members_msg_;
      }
      break;
    }
    case kCreateGroupMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.create_group_msg_;
      }
      break;
    }
    case kE2EeMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.e2ee_msg_;
      }
      break;
    }
    case kInviteMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.invite_msg_;
      }
      break;
    }
    case kRemoveGroupMembersMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.remove_group_members_msg_;
      }
      break;
    }
    case kSupplyOpksMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.supply_opks_msg_;
      }
      break;
    }
    case kHeartbeatMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.heartbeat_msg_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void ProtoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:skissm.ProtoMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proto_msg_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && from_ != nullptr) {
    delete from_;
  }
  from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && to_ != nullptr) {
    delete to_;
  }
  to_ = nullptr;
  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string proto_msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_proto_msg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "skissm.ProtoMsg.proto_msg_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.E2eeAddress from = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.E2eeAddress to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.AcceptMsg accept_msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accept_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.AddGroupMembersMsg add_group_members_msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_add_group_members_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.CreateGroupMsg create_group_msg = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_group_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.E2eeMsg e2ee_msg = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_e2ee_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.InviteMsg invite_msg = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.RemoveGroupMembersMsg remove_group_members_msg = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_remove_group_members_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.SupplyOpksMsg supply_opks_msg = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_supply_opks_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .skissm.HeartbeatMsg heartbeat_msg = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:skissm.ProtoMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string proto_msg_id = 1;
  if (!this->_internal_proto_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_msg_id().data(), static_cast<int>(this->_internal_proto_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "skissm.ProtoMsg.proto_msg_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_proto_msg_id(), target);
  }

  // .skissm.E2eeAddress from = 2;
  if (this->_internal_has_from()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::from(this), target, stream);
  }

  // .skissm.E2eeAddress to = 3;
  if (this->_internal_has_to()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::to(this), target, stream);
  }

  // .skissm.AcceptMsg accept_msg = 4;
  if (_internal_has_accept_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::accept_msg(this), target, stream);
  }

  // .skissm.AddGroupMembersMsg add_group_members_msg = 5;
  if (_internal_has_add_group_members_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::add_group_members_msg(this), target, stream);
  }

  // .skissm.CreateGroupMsg create_group_msg = 6;
  if (_internal_has_create_group_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::create_group_msg(this), target, stream);
  }

  // .skissm.E2eeMsg e2ee_msg = 7;
  if (_internal_has_e2ee_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::e2ee_msg(this), target, stream);
  }

  // .skissm.InviteMsg invite_msg = 8;
  if (_internal_has_invite_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::invite_msg(this), target, stream);
  }

  // .skissm.RemoveGroupMembersMsg remove_group_members_msg = 9;
  if (_internal_has_remove_group_members_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::remove_group_members_msg(this), target, stream);
  }

  // .skissm.SupplyOpksMsg supply_opks_msg = 10;
  if (_internal_has_supply_opks_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::supply_opks_msg(this), target, stream);
  }

  // .skissm.HeartbeatMsg heartbeat_msg = 11;
  if (_internal_has_heartbeat_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::heartbeat_msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skissm.ProtoMsg)
  return target;
}

size_t ProtoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skissm.ProtoMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proto_msg_id = 1;
  if (!this->_internal_proto_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_msg_id());
  }

  // .skissm.E2eeAddress from = 2;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .skissm.E2eeAddress to = 3;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *to_);
  }

  switch (payload_case()) {
    // .skissm.AcceptMsg accept_msg = 4;
    case kAcceptMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.accept_msg_);
      break;
    }
    // .skissm.AddGroupMembersMsg add_group_members_msg = 5;
    case kAddGroupMembersMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.add_group_members_msg_);
      break;
    }
    // .skissm.CreateGroupMsg create_group_msg = 6;
    case kCreateGroupMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.create_group_msg_);
      break;
    }
    // .skissm.E2eeMsg e2ee_msg = 7;
    case kE2EeMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.e2ee_msg_);
      break;
    }
    // .skissm.InviteMsg invite_msg = 8;
    case kInviteMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.invite_msg_);
      break;
    }
    // .skissm.RemoveGroupMembersMsg remove_group_members_msg = 9;
    case kRemoveGroupMembersMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.remove_group_members_msg_);
      break;
    }
    // .skissm.SupplyOpksMsg supply_opks_msg = 10;
    case kSupplyOpksMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.supply_opks_msg_);
      break;
    }
    // .skissm.HeartbeatMsg heartbeat_msg = 11;
    case kHeartbeatMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.heartbeat_msg_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtoMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoMsg::GetClassData() const { return &_class_data_; }

void ProtoMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProtoMsg *>(to)->MergeFrom(
      static_cast<const ProtoMsg &>(from));
}


void ProtoMsg::MergeFrom(const ProtoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skissm.ProtoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proto_msg_id().empty()) {
    _internal_set_proto_msg_id(from._internal_proto_msg_id());
  }
  if (from._internal_has_from()) {
    _internal_mutable_from()->::skissm::E2eeAddress::MergeFrom(from._internal_from());
  }
  if (from._internal_has_to()) {
    _internal_mutable_to()->::skissm::E2eeAddress::MergeFrom(from._internal_to());
  }
  switch (from.payload_case()) {
    case kAcceptMsg: {
      _internal_mutable_accept_msg()->::skissm::AcceptMsg::MergeFrom(from._internal_accept_msg());
      break;
    }
    case kAddGroupMembersMsg: {
      _internal_mutable_add_group_members_msg()->::skissm::AddGroupMembersMsg::MergeFrom(from._internal_add_group_members_msg());
      break;
    }
    case kCreateGroupMsg: {
      _internal_mutable_create_group_msg()->::skissm::CreateGroupMsg::MergeFrom(from._internal_create_group_msg());
      break;
    }
    case kE2EeMsg: {
      _internal_mutable_e2ee_msg()->::skissm::E2eeMsg::MergeFrom(from._internal_e2ee_msg());
      break;
    }
    case kInviteMsg: {
      _internal_mutable_invite_msg()->::skissm::InviteMsg::MergeFrom(from._internal_invite_msg());
      break;
    }
    case kRemoveGroupMembersMsg: {
      _internal_mutable_remove_group_members_msg()->::skissm::RemoveGroupMembersMsg::MergeFrom(from._internal_remove_group_members_msg());
      break;
    }
    case kSupplyOpksMsg: {
      _internal_mutable_supply_opks_msg()->::skissm::SupplyOpksMsg::MergeFrom(from._internal_supply_opks_msg());
      break;
    }
    case kHeartbeatMsg: {
      _internal_mutable_heartbeat_msg()->::skissm::HeartbeatMsg::MergeFrom(from._internal_heartbeat_msg());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoMsg::CopyFrom(const ProtoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skissm.ProtoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoMsg::IsInitialized() const {
  return true;
}

void ProtoMsg::InternalSwap(ProtoMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &proto_msg_id_, lhs_arena,
      &other->proto_msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoMsg, to_)
      + sizeof(ProtoMsg::to_)
      - PROTOBUF_FIELD_OFFSET(ProtoMsg, from_)>(
          reinterpret_cast<char*>(&from_),
          reinterpret_cast<char*>(&other->from_));
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_skissm_2fProtoMsg_2eproto_getter, &descriptor_table_skissm_2fProtoMsg_2eproto_once,
      file_level_metadata_skissm_2fProtoMsg_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace skissm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::skissm::ProtoMsg* Arena::CreateMaybeMessage< ::skissm::ProtoMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::skissm::ProtoMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
