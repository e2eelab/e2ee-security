/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: GroupSession.proto */

#ifndef PROTOBUF_C_GroupSession_2eproto__INCLUDED
#define PROTOBUF_C_GroupSession_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "skissm/E2eeAddress.pb-c.h"
#include "skissm/GroupMember.pb-c.h"

typedef struct Skissm__GroupSession Skissm__GroupSession;


/* --- enums --- */


/* --- messages --- */

struct  Skissm__GroupSession
{
  ProtobufCMessage base;
  char *version;
  char *e2ee_pack_id;
  char *session_id;
  Skissm__E2eeAddress *session_owner;
  Skissm__E2eeAddress *group_address;
  size_t n_group_members;
  Skissm__GroupMember **group_members;
  uint32_t sequence;
  ProtobufCBinaryData chain_key;
  ProtobufCBinaryData signature_private_key;
  ProtobufCBinaryData signature_public_key;
  ProtobufCBinaryData associated_data;
};
#define SKISSM__GROUP_SESSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skissm__group_session__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, 0,NULL, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL} }


/* Skissm__GroupSession methods */
void   skissm__group_session__init
                     (Skissm__GroupSession         *message);
size_t skissm__group_session__get_packed_size
                     (const Skissm__GroupSession   *message);
size_t skissm__group_session__pack
                     (const Skissm__GroupSession   *message,
                      uint8_t             *out);
size_t skissm__group_session__pack_to_buffer
                     (const Skissm__GroupSession   *message,
                      ProtobufCBuffer     *buffer);
Skissm__GroupSession *
       skissm__group_session__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skissm__group_session__free_unpacked
                     (Skissm__GroupSession *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Skissm__GroupSession_Closure)
                 (const Skissm__GroupSession *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor skissm__group_session__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_GroupSession_2eproto__INCLUDED */
