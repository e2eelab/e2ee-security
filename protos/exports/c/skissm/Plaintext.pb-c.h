/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Plaintext.proto */

#ifndef PROTOBUF_C_Plaintext_2eproto__INCLUDED
#define PROTOBUF_C_Plaintext_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "skissm/GroupPreKeyPayload.pb-c.h"

typedef struct Skissm__Plaintext Skissm__Plaintext;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  SKISSM__PLAINTEXT__PAYLOAD__NOT_SET = 0,
  SKISSM__PLAINTEXT__PAYLOAD_COMMON_MSG = 2,
  SKISSM__PLAINTEXT__PAYLOAD_GROUP_PRE_KEY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SKISSM__PLAINTEXT__PAYLOAD__CASE)
} Skissm__Plaintext__PayloadCase;

struct  Skissm__Plaintext
{
  ProtobufCMessage base;
  char *version;
  Skissm__Plaintext__PayloadCase payload_case;
  union {
    ProtobufCBinaryData common_msg;
    Skissm__GroupPreKeyPayload *group_pre_key;
  };
};
#define SKISSM__PLAINTEXT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skissm__plaintext__descriptor) \
    , (char *)protobuf_c_empty_string, SKISSM__PLAINTEXT__PAYLOAD__NOT_SET, {0} }


/* Skissm__Plaintext methods */
void   skissm__plaintext__init
                     (Skissm__Plaintext         *message);
size_t skissm__plaintext__get_packed_size
                     (const Skissm__Plaintext   *message);
size_t skissm__plaintext__pack
                     (const Skissm__Plaintext   *message,
                      uint8_t             *out);
size_t skissm__plaintext__pack_to_buffer
                     (const Skissm__Plaintext   *message,
                      ProtobufCBuffer     *buffer);
Skissm__Plaintext *
       skissm__plaintext__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skissm__plaintext__free_unpacked
                     (Skissm__Plaintext *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Skissm__Plaintext_Closure)
                 (const Skissm__Plaintext *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor skissm__plaintext__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Plaintext_2eproto__INCLUDED */
