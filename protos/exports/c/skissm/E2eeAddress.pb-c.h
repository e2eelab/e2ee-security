/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: E2eeAddress.proto */

#ifndef PROTOBUF_C_E2eeAddress_2eproto__INCLUDED
#define PROTOBUF_C_E2eeAddress_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Skissm__PeerUser Skissm__PeerUser;
typedef struct Skissm__PeerGroup Skissm__PeerGroup;
typedef struct Skissm__E2eeAddress Skissm__E2eeAddress;


/* --- enums --- */


/* --- messages --- */

struct  Skissm__PeerUser
{
  ProtobufCMessage base;
  char *user_id;
  char *device_id;
};
#define SKISSM__PEER_USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skissm__peer_user__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Skissm__PeerGroup
{
  ProtobufCMessage base;
  char *group_id;
};
#define SKISSM__PEER_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skissm__peer_group__descriptor) \
    , (char *)protobuf_c_empty_string }


typedef enum {
  SKISSM__E2EE_ADDRESS__PEER__NOT_SET = 0,
  SKISSM__E2EE_ADDRESS__PEER_USER = 2,
  SKISSM__E2EE_ADDRESS__PEER_GROUP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SKISSM__E2EE_ADDRESS__PEER__CASE)
} Skissm__E2eeAddress__PeerCase;

struct  Skissm__E2eeAddress
{
  ProtobufCMessage base;
  char *domain;
  Skissm__E2eeAddress__PeerCase peer_case;
  union {
    Skissm__PeerUser *user;
    Skissm__PeerGroup *group;
  };
};
#define SKISSM__E2EE_ADDRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skissm__e2ee_address__descriptor) \
    , (char *)protobuf_c_empty_string, SKISSM__E2EE_ADDRESS__PEER__NOT_SET, {0} }


/* Skissm__PeerUser methods */
void   skissm__peer_user__init
                     (Skissm__PeerUser         *message);
size_t skissm__peer_user__get_packed_size
                     (const Skissm__PeerUser   *message);
size_t skissm__peer_user__pack
                     (const Skissm__PeerUser   *message,
                      uint8_t             *out);
size_t skissm__peer_user__pack_to_buffer
                     (const Skissm__PeerUser   *message,
                      ProtobufCBuffer     *buffer);
Skissm__PeerUser *
       skissm__peer_user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skissm__peer_user__free_unpacked
                     (Skissm__PeerUser *message,
                      ProtobufCAllocator *allocator);
/* Skissm__PeerGroup methods */
void   skissm__peer_group__init
                     (Skissm__PeerGroup         *message);
size_t skissm__peer_group__get_packed_size
                     (const Skissm__PeerGroup   *message);
size_t skissm__peer_group__pack
                     (const Skissm__PeerGroup   *message,
                      uint8_t             *out);
size_t skissm__peer_group__pack_to_buffer
                     (const Skissm__PeerGroup   *message,
                      ProtobufCBuffer     *buffer);
Skissm__PeerGroup *
       skissm__peer_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skissm__peer_group__free_unpacked
                     (Skissm__PeerGroup *message,
                      ProtobufCAllocator *allocator);
/* Skissm__E2eeAddress methods */
void   skissm__e2ee_address__init
                     (Skissm__E2eeAddress         *message);
size_t skissm__e2ee_address__get_packed_size
                     (const Skissm__E2eeAddress   *message);
size_t skissm__e2ee_address__pack
                     (const Skissm__E2eeAddress   *message,
                      uint8_t             *out);
size_t skissm__e2ee_address__pack_to_buffer
                     (const Skissm__E2eeAddress   *message,
                      ProtobufCBuffer     *buffer);
Skissm__E2eeAddress *
       skissm__e2ee_address__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skissm__e2ee_address__free_unpacked
                     (Skissm__E2eeAddress *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Skissm__PeerUser_Closure)
                 (const Skissm__PeerUser *message,
                  void *closure_data);
typedef void (*Skissm__PeerGroup_Closure)
                 (const Skissm__PeerGroup *message,
                  void *closure_data);
typedef void (*Skissm__E2eeAddress_Closure)
                 (const Skissm__E2eeAddress *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor skissm__peer_user__descriptor;
extern const ProtobufCMessageDescriptor skissm__peer_group__descriptor;
extern const ProtobufCMessageDescriptor skissm__e2ee_address__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_E2eeAddress_2eproto__INCLUDED */
