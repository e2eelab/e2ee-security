syntax = "proto3";

package skissm;

option java_package = "org.e2eelab.skissm.proto";
option cc_enable_arenas = true;
option cc_generic_services = false;

import "skissm/e2ee_protocol_msg.proto";
import "skissm/request_auth_code_payload.proto";
import "skissm/register_user_request_payload.proto";
import "skissm/get_pre_key_bundle_request_payload.proto";
import "skissm/publish_spk_request_payload.proto";
import "skissm/e2ee_message.proto";
import "skissm/create_group_request_payload.proto";
import "skissm/add_group_members_request_payload.proto";
import "skissm/remove_group_members_request_payload.proto";
import "skissm/get_group_request_payload.proto";

import "skissm/response_data.proto";
import "skissm/event_data_request.proto";
import "skissm/login_request.proto";
import "skissm/logout_request.proto";
import "skissm/connect_request.proto";

service E2EEService {
    // bidirectional streaming operations
    rpc communicate(stream skissm.e2ee_protocol_msg) returns (stream skissm.e2ee_protocol_msg) {
    }

    // server streaming operations
    rpc connect(skissm.connect_request) returns (stream skissm.e2ee_protocol_msg) {
    }

    // unary operations
    rpc requestAuthCode(skissm.request_auth_code_payload) returns (skissm.response_data) {}
    rpc registerUser(skissm.register_user_request_payload) returns (skissm.response_data) {}

    rpc login(skissm.login_request) returns (skissm.response_data) {}
    rpc logout(skissm.logout_request) returns (skissm.response_data) {}

    rpc getPreKeyBundle(skissm.get_pre_key_bundle_request_payload) returns (skissm.response_data) {}
    rpc publishSPK(skissm.publish_spk_request_payload) returns (skissm.response_data) {}
    rpc sendOne2OneMsg(skissm.e2ee_message) returns (skissm.response_data) {}

    rpc createGroup(skissm.create_group_request_payload) returns (skissm.response_data) {}
    rpc addGroupMembers(skissm.add_group_members_request_payload) returns (skissm.response_data) {}
    rpc removeGroupMembers(skissm.remove_group_members_request_payload) returns (skissm.response_data) {}
    rpc getGroup(skissm.get_group_request_payload) returns (skissm.response_data) {}
    rpc sendGroupMsg(skissm.e2ee_message) returns (skissm.response_data) {}

    rpc getEventData(skissm.event_data_request) returns (skissm.response_data) {}
}