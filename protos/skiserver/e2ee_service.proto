syntax = "proto3";

package skiserver;

option java_package = "org.e2eelab.skiserver.proto";

import "skissm/e2ee_protocol_msg.proto";
import "skissm/register_user_request_payload.proto";
import "skissm/get_pre_key_bundle_request_payload.proto";
import "skissm/publish_spk_request_payload.proto";
import "skissm/e2ee_message.proto";
import "skissm/create_group_request_payload.proto";
import "skissm/add_group_members_request_payload.proto";
import "skissm/remove_group_members_request_payload.proto";
import "skissm/get_group_request_payload.proto";

import "skiserver/acquire_auth_code_payload.proto";
import "skiserver/response_data.proto";
import "skiserver/login_request.proto";
import "skiserver/logout_request.proto";
import "skiserver/connect_request.proto";
import "skiserver/acquire_server_info_request.proto";
import "skiserver/event_data_request.proto";

service E2EEService {
    // bidirectional streaming operations
    rpc communicate(stream skissm.e2ee_protocol_msg) returns (stream skissm.e2ee_protocol_msg) {
    }

    // server streaming operations
    rpc connect(skiserver.connect_request) returns (stream skissm.e2ee_protocol_msg) {
    }

    // unary operations
    rpc acquireAuthCode(skiserver.acquire_auth_code_payload) returns (skiserver.response_data) {}
    rpc login(skiserver.login_request) returns (skiserver.response_data) {}
    rpc logout(skiserver.logout_request) returns (skiserver.response_data) {}
    rpc acquireServerInfo(skiserver.acquire_server_info_request) returns (skiserver.response_data) {}
    rpc getEventData(skiserver.event_data_request) returns (skiserver.response_data) {}

    rpc registerUser(skissm.register_user_request_payload) returns (skiserver.response_data) {}
    rpc getPreKeyBundle(skissm.get_pre_key_bundle_request_payload) returns (skiserver.response_data) {}
    rpc publishSPK(skissm.publish_spk_request_payload) returns (skiserver.response_data) {}
    rpc sendOne2OneMsg(skissm.e2ee_message) returns (skiserver.response_data) {}

    rpc createGroup(skissm.create_group_request_payload) returns (skiserver.response_data) {}
    rpc addGroupMembers(skissm.add_group_members_request_payload) returns (skiserver.response_data) {}
    rpc removeGroupMembers(skissm.remove_group_members_request_payload) returns (skiserver.response_data) {}
    rpc getGroup(skissm.get_group_request_payload) returns (skiserver.response_data) {}
    rpc sendGroupMsg(skissm.e2ee_message) returns (skiserver.response_data) {}
}