// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skissm/service/e2ee_service.proto

#include "skissm/service/e2ee_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace org {
namespace e2eelab {
namespace server {
namespace grpc {
namespace e2ee {
}  // namespace e2ee
}  // namespace grpc
}  // namespace server
}  // namespace e2eelab
}  // namespace org
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_skissm_2fservice_2fe2ee_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_skissm_2fservice_2fe2ee_5fservice_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_skissm_2fservice_2fe2ee_5fservice_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_skissm_2fservice_2fe2ee_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!skissm/service/e2ee_service.proto\022\034org"
  ".e2eelab.server.grpc.e2ee\032\036skissm/e2ee_p"
  "rotocol_msg.proto\032*skissm/register_user_"
  "request_payload.proto\032(skissm/delete_use"
  "r_request_payload.proto\032/skissm/get_pre_"
  "key_bundle_request_payload.proto\032(skissm"
  "/publish_spk_request_payload.proto\032\031skis"
  "sm/e2ee_message.proto\032)skissm/create_gro"
  "up_request_payload.proto\032.skissm/add_gro"
  "up_members_request_payload.proto\0321skissm"
  "/remove_group_members_request_payload.pr"
  "oto\032&skissm/get_group_request_payload.pr"
  "oto\032&skissm/service/dto/response_data.pr"
  "oto\032+skissm/service/dto/event_data_reque"
  "st.proto\032&skissm/service/dto/login_reque"
  "st.proto\032\'skissm/service/dto/logout_requ"
  "est.proto\032(skissm/service/dto/connect_re"
  "quest.proto2\363\014\n\013E2EEService\022m\n\013communica"
  "te\022+.org.e2eelab.skissm.proto.e2ee_proto"
  "col_msg\032+.org.e2eelab.skissm.proto.e2ee_"
  "protocol_msg\"\000(\0010\001\022d\n\007connect\022(.org.e2ee"
  "lab.server.grpc.connect_request\032+.org.e2"
  "eelab.skissm.proto.e2ee_protocol_msg\"\0000\001"
  "\022^\n\005login\022+.org.e2eelab.server.grpc.auth"
  ".login_request\032&.org.e2eelab.server.grpc"
  ".response_data\"\000\022`\n\006logout\022,.org.e2eelab"
  ".server.grpc.auth.logout_request\032&.org.e"
  "2eelab.server.grpc.response_data\"\000\022q\n\014re"
  "gisterUser\0227.org.e2eelab.skissm.proto.re"
  "gister_user_request_payload\032&.org.e2eela"
  "b.server.grpc.response_data\"\000\022m\n\ndeleteU"
  "ser\0225.org.e2eelab.skissm.proto.delete_us"
  "er_request_payload\032&.org.e2eelab.server."
  "grpc.response_data\"\000\022y\n\017getPreKeyBundle\022"
  "<.org.e2eelab.skissm.proto.get_pre_key_b"
  "undle_request_payload\032&.org.e2eelab.serv"
  "er.grpc.response_data\"\000\022m\n\npublishSPK\0225."
  "org.e2eelab.skissm.proto.publish_spk_req"
  "uest_payload\032&.org.e2eelab.server.grpc.r"
  "esponse_data\"\000\022b\n\016sendOne2OneMsg\022&.org.e"
  "2eelab.skissm.proto.e2ee_message\032&.org.e"
  "2eelab.server.grpc.response_data\"\000\022o\n\013cr"
  "eateGroup\0226.org.e2eelab.skissm.proto.cre"
  "ate_group_request_payload\032&.org.e2eelab."
  "server.grpc.response_data\"\000\022x\n\017addGroupM"
  "embers\022;.org.e2eelab.skissm.proto.add_gr"
  "oup_members_request_payload\032&.org.e2eela"
  "b.server.grpc.response_data\"\000\022~\n\022removeG"
  "roupMembers\022>.org.e2eelab.skissm.proto.r"
  "emove_group_members_request_payload\032&.or"
  "g.e2eelab.server.grpc.response_data\"\000\022i\n"
  "\010getGroup\0223.org.e2eelab.skissm.proto.get"
  "_group_request_payload\032&.org.e2eelab.ser"
  "ver.grpc.response_data\"\000\022`\n\014sendGroupMsg"
  "\022&.org.e2eelab.skissm.proto.e2ee_message"
  "\032&.org.e2eelab.server.grpc.response_data"
  "\"\000\022e\n\014getEventData\022+.org.e2eelab.server."
  "grpc.event_data_request\032&.org.e2eelab.se"
  "rver.grpc.response_data\"\000B\006\200\001\000\370\001\001b\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto_deps[15] = {
  &::descriptor_table_skissm_2fadd_5fgroup_5fmembers_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fcreate_5fgroup_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fdelete_5fuser_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fe2ee_5fmessage_2eproto,
  &::descriptor_table_skissm_2fe2ee_5fprotocol_5fmsg_2eproto,
  &::descriptor_table_skissm_2fget_5fgroup_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fget_5fpre_5fkey_5fbundle_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fpublish_5fspk_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fregister_5fuser_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fremove_5fgroup_5fmembers_5frequest_5fpayload_2eproto,
  &::descriptor_table_skissm_2fservice_2fdto_2fconnect_5frequest_2eproto,
  &::descriptor_table_skissm_2fservice_2fdto_2fevent_5fdata_5frequest_2eproto,
  &::descriptor_table_skissm_2fservice_2fdto_2flogin_5frequest_2eproto,
  &::descriptor_table_skissm_2fservice_2fdto_2flogout_5frequest_2eproto,
  &::descriptor_table_skissm_2fservice_2fdto_2fresponse_5fdata_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto = {
  false, false, 2361, descriptor_table_protodef_skissm_2fservice_2fe2ee_5fservice_2eproto, "skissm/service/e2ee_service.proto", 
  &descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto_once, descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_skissm_2fservice_2fe2ee_5fservice_2eproto::offsets,
  nullptr, file_level_enum_descriptors_skissm_2fservice_2fe2ee_5fservice_2eproto, file_level_service_descriptors_skissm_2fservice_2fe2ee_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto_getter() {
  return &descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_skissm_2fservice_2fe2ee_5fservice_2eproto(&descriptor_table_skissm_2fservice_2fe2ee_5fservice_2eproto);
namespace org {
namespace e2eelab {
namespace server {
namespace grpc {
namespace e2ee {

// @@protoc_insertion_point(namespace_scope)
}  // namespace e2ee
}  // namespace grpc
}  // namespace server
}  // namespace e2eelab
}  // namespace org
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
