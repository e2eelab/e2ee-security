// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skissm/e2ee_message_type.proto

#include "skissm/e2ee_message_type.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace org {
namespace e2eelab {
namespace skissm {
namespace proto {
}  // namespace proto
}  // namespace skissm
}  // namespace e2eelab
}  // namespace org
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_skissm_2fe2ee_5fmessage_5ftype_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_skissm_2fe2ee_5fmessage_5ftype_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_skissm_2fe2ee_5fmessage_5ftype_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_skissm_2fe2ee_5fmessage_5ftype_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036skissm/e2ee_message_type.proto\022\030org.e2"
  "eelab.skissm.proto*@\n\021e2ee_message_type\022"
  "\013\n\007PRE_KEY\020\000\022\013\n\007MESSAGE\020\001\022\021\n\rGROUP_MESSA"
  "GE\020\002B\021B\017E2eeMessageTypeb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto = {
  false, false, 151, descriptor_table_protodef_skissm_2fe2ee_5fmessage_5ftype_2eproto, "skissm/e2ee_message_type.proto", 
  &descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_skissm_2fe2ee_5fmessage_5ftype_2eproto::offsets,
  nullptr, file_level_enum_descriptors_skissm_2fe2ee_5fmessage_5ftype_2eproto, file_level_service_descriptors_skissm_2fe2ee_5fmessage_5ftype_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto_getter() {
  return &descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_skissm_2fe2ee_5fmessage_5ftype_2eproto(&descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto);
namespace org {
namespace e2eelab {
namespace skissm {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* e2ee_message_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_skissm_2fe2ee_5fmessage_5ftype_2eproto);
  return file_level_enum_descriptors_skissm_2fe2ee_5fmessage_5ftype_2eproto[0];
}
bool e2ee_message_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace skissm
}  // namespace e2eelab
}  // namespace org
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
