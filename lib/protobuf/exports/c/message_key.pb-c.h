/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message_key.proto */

#ifndef PROTOBUF_C_message_5fkey_2eproto__INCLUDED
#define PROTOBUF_C_message_5fkey_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Org__E2eelab__Skissm__Proto__MessageKey Org__E2eelab__Skissm__Proto__MessageKey;


/* --- enums --- */


/* --- messages --- */

struct  Org__E2eelab__Skissm__Proto__MessageKey
{
  ProtobufCMessage base;
  uint32_t index;
  ProtobufCBinaryData derived_key;
};
#define ORG__E2EELAB__SKISSM__PROTO__MESSAGE_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&org__e2eelab__skissm__proto__message_key__descriptor) \
    , 0, {0,NULL} }


/* Org__E2eelab__Skissm__Proto__MessageKey methods */
void   org__e2eelab__skissm__proto__message_key__init
                     (Org__E2eelab__Skissm__Proto__MessageKey         *message);
size_t org__e2eelab__skissm__proto__message_key__get_packed_size
                     (const Org__E2eelab__Skissm__Proto__MessageKey   *message);
size_t org__e2eelab__skissm__proto__message_key__pack
                     (const Org__E2eelab__Skissm__Proto__MessageKey   *message,
                      uint8_t             *out);
size_t org__e2eelab__skissm__proto__message_key__pack_to_buffer
                     (const Org__E2eelab__Skissm__Proto__MessageKey   *message,
                      ProtobufCBuffer     *buffer);
Org__E2eelab__Skissm__Proto__MessageKey *
       org__e2eelab__skissm__proto__message_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   org__e2eelab__skissm__proto__message_key__free_unpacked
                     (Org__E2eelab__Skissm__Proto__MessageKey *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Org__E2eelab__Skissm__Proto__MessageKey_Closure)
                 (const Org__E2eelab__Skissm__Proto__MessageKey *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor org__e2eelab__skissm__proto__message_key__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_5fkey_2eproto__INCLUDED */
